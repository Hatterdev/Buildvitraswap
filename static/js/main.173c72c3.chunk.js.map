{"version":3,"sources":["styles/index.js","config.js","../../contracts/src/abis.js","../../contracts/src/addresses.js","utils/getFactoryInfo.js","utils/getPairsInfo.js","utils/helpers.js","hooks/usePools.js","utils/getRouterInfo.js","assets/chevron-down.svg","assets/2.png","assets/1.png","components/Loader.js","components/AmountIn.js","components/AmountOut.js","components/Balance.js","components/Exchange.js","components/WalletButton.js","App.js","index.js"],"names":["styles","container","innerContainer","header","exchangeContainer","headTitle","subTitle","exchangeBoxWrapper","exchangeBox","exchange","amountContainer","amountInput","currencyButton","currencyList","currencyListItem","actionButton","message","walletButton","loader","loaderImg","loaderText","balance","balanceText","balanceBold","ROUTER_ADDRESS","DAPP_CONFIG","readOnlyChainId","Goerli","chainId","readOnlyUrls","erc20","factory","pair","router01","router02","commonContracts","getFactoryInfo","async","factoryAddress","web3","eth","Contract","abis","factoryInfo","feeTo","methods","call","feeToSetter","allPairsLength","allPairs","i","pairsInfo","pairAddresses","pairABI","tokenABI","abi","length","pairAddress","token0Address","token0","token1Address","token1","token0Contract","token1Contract","token0Name","name","token1Name","push","address","getPairsInfo","isOperationPending","operationState","status","isOperationFailed","isOperationSucceeded","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","loadPools","provider","Web3","providers","HttpProvider","providerUrl","routerInfo","routerAddress","router","getRouterInfo","Loader","title","className","src","ethereumLogo","alt","AmountIn","value","onChange","currencyValue","onSelect","currencies","isSwapping","showList","setShowList","useState","activeCurrency","setActiveCurrency","useRef","Object","keys","includes","placeholder","type","disabled","e","onClick","chevronDown","entries","map","index","token","tokenName","AmountOut","fromToken","toToken","amountIn","pairContract","amountOut","isValidAmountIn","gt","parseUnits","areParamsValid","error","useCall","contract","method","args","amounts","useAmountsOut","formatUnits","Balance","tokenBalance","Exchange","pools","account","useEthers","fromValue","setFromValue","setFromToken","setToToken","resetState","setResetState","fromValueBigNumber","availableTokens","reduce","prev","curr","getAvailableTokens","counterpartTokens","filter","cur","getCounterpartTokens","Array","isArray","find","findPoolByTokens","routerContract","fromTokenContract","ERC20","fromTokenBalance","useTokenBalance","toTokenBalance","tokenAllowance","useTokenAllowance","approvedNeeded","formValueIsGreaterThan0","hasEnoughBalance","lte","state","swapApproveState","send","swapApproveSend","useContractFunction","transactionName","gasLimitBufferPercentage","swapExecuteState","swapExecuteSend","isApproving","canApprove","canSwap","successMessage","getSuccessMessage","failureMessage","errorMessage","getFailureMessage","setTimeout","trimmedValue","trim","ethers","constants","MaxUint256","Math","floor","Date","now","then","_","WalletButton","rendered","setRendered","ens","useLookupAddress","activateBrowserWallet","deactivate","shortenAddress","App","poolsLoading","useConfig","loading","setLoading","setPools","usePools","uniswapLogo","ReactDOM","render","StrictMode","DAppProvider","config","getElementById"],"mappings":"y8uCAiDeA,MAjDA,CAEbC,UAAW,+DACXC,eACE,mEACFC,OAAQ,kEACRC,kBACE,+DACFC,UAAW,4DACXC,SAAU,yDACVC,mBAAoB,mCACpBC,YACE,uGACFC,SACE,2FAGFC,gBACE,yKACFC,YACE,wFACFC,eACE,iGACFC,aACE,yHACFC,iBACE,iHAGFC,aACE,2HACFC,QAAS,iDAGTC,aACE,wJAGFC,OAAQ,8DACRC,UAAW,2BACXC,WACE,oEAGFC,QAAS,6BACTC,YAAa,0CACbC,YAAa,4B,oCC5CR,MAAMC,EAAiB,6CAEjBC,EAAc,CACzBC,gBAAiBC,IAAOC,QACxBC,aAAc,CACZ,CAACF,IAAOC,SAAU,yE,ICDP,GACbE,M,OACAC,Q,OACAC,K,OACAC,S,OACAC,S,QCPK,MAODC,EAAkB,CACtBJ,QAAS,6CACTE,SAAU,6CACVC,SAAU,8CCXL,MAAME,EAAiBC,MAAOC,EAAgBC,KACnD,MAAMR,EAAU,IAAIQ,EAAKC,IAAIC,SAASC,EAAKX,QAASO,GAE9CK,EAAc,CAClBC,YAAab,EAAQc,QAAQD,QAAQE,OACrCC,kBAAmBhB,EAAQc,QAAQE,cAAcD,OACjDE,qBAAsBjB,EAAQc,QAAQG,iBAAiBF,OACvDG,SAAU,IAGZ,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAYK,eAAgBE,IAC9CP,EAAYM,SAASC,SAAWnB,EAAQc,QAAQI,SAASC,GAAGJ,OAK9D,OAFAH,EAAYQ,gBCfPd,eAA4Be,EAAeb,GAChD,MAAMY,EAAY,GACZE,EAAUX,EAAKV,KACfsB,EAAWZ,EAAKZ,MAAMyB,IAE5B,IAAK,IAAIL,EAAI,EAAGA,EAAIE,EAAcI,SAAUN,EAAG,CAC7C,MAAMO,EAAcL,EAAcF,GAC5BlB,EAAO,IAAIO,EAAKC,IAAIC,SAASY,EAASD,EAAcF,IAEpDQ,QAAsB1B,EAAKa,QAAQc,SAASb,OAC5Cc,QAAsB5B,EAAKa,QAAQgB,SAASf,OAC5CgB,EAAiB,IAAIvB,EAAKC,IAAIC,SAASa,EAAUI,GACjDK,EAAiB,IAAIxB,EAAKC,IAAIC,SAASa,EAAUM,GACjDI,QAAmBF,EAAejB,QAAQoB,OAAOnB,OACjDoB,QAAmBH,EAAelB,QAAQoB,OAAOnB,OAEvDK,EAAUgB,KAAK,CACbC,QAASX,EACTC,gBACAE,gBACAI,aACAE,cAEH,CAED,OAAOf,CACR,CDX+BkB,CAAa1B,EAAYM,SAAUV,GAE1DI,CAAP,E,6BEVK,MA4BM2B,EAAsBC,GACP,qBAA1BA,EAAeC,QAA2D,WAA1BD,EAAeC,OACpDC,EAAqBF,GACR,SAA1BA,EAAeC,QAA+C,cAA1BD,EAAeC,OACtCE,EAAwBH,GACX,YAA1BA,EAAeC,OAiDFG,EAAoB,CAACC,EAAKC,KACrCC,qBAAU,KACR,MAAMC,EAAYC,IAEXJ,EAAIK,UAAWL,EAAIK,QAAQC,SAASF,EAAMG,SAG/CN,EAAQG,EAAR,EAMF,OAHAI,SAASC,iBAAiB,YAAaN,GACvCK,SAASC,iBAAiB,aAAcN,GAEjC,KACLK,SAASE,oBAAoB,YAAaP,GAC1CK,SAASE,oBAAoB,aAAcP,EAA3C,CAFF,GAIC,CAACH,EAAKC,GAhBT,ECrFWU,EAAYlD,UACvB,MAAMmD,EAAW,IAAIC,IAAKC,UAAUC,aAAaC,GAC3CrD,EAAO,IAAIkD,IAAKD,GAChBK,OCRqBxD,OAAOyD,EAAevD,KACjD,MAAMwD,EAAS,IAAIxD,EAAKC,IAAIC,SAASC,EAAKR,SAAU4D,GAEpD,MAAO,CACL/D,cAAegE,EAAOlD,QAAQd,UAAUe,OAD1C,EDKyBkD,CAAcxE,EAAgBe,GAEvD,aAD0BH,EAAeyD,EAAW9D,QAASQ,IAC1CY,SAAnB,EEZa,UAA0B,yCCA1B,MAA0B,8BCA1B,MAA0B,8B,OCkB1B8C,MAbA,IAAgB,IAAf,MAAEC,GAAY,EAC5B,OACE,sBAAKC,UAAWnG,EAAOkB,OAAvB,UACE,qBACEkF,IAAKC,EACLC,IAAI,gBACJH,UAAWnG,EAAOmB,YAEpB,mBAAGgF,UAAWnG,EAAOoB,WAArB,SAAkC8E,MAPtC,E,4CC4DaK,MA5DE,IAA2E,IAA1E,MAAEC,EAAF,SAASC,EAAT,cAAmBC,EAAnB,SAAkCC,EAAlC,WAA4CC,EAA5C,WAAwDC,GAAiB,EACzF,MAAOC,EAAUC,GAAeC,oBAAS,IAClCC,EAAgBC,GAAqBF,mBAAS,UAC/CpC,EAAMuC,mBAUZ,OARAxC,EAAkBC,GAAK,IAAMmC,GAAY,KAEzCjC,qBAAU,KACJsC,OAAOC,KAAKT,GAAYU,SAASZ,GACnCQ,EAAkBN,EAAWF,IAC1BQ,EAAkB,SAAlB,GACJ,CAACN,EAAYF,IAGd,sBAAKP,UAAWnG,EAAOU,gBAAvB,UACE,uBACE6G,YAAY,MACZC,KAAK,SACLhB,MAAOA,EACPiB,SAAUZ,EACVJ,SAAWiB,GAA0B,oBAAbjB,GAA2BA,EAASiB,EAAEvC,OAAOqB,OACrEL,UAAWnG,EAAOW,cAGpB,sBAAKwF,UAAU,WAAWwB,QAAS,IAAMZ,GAAaD,GAAtD,UACE,yBAAQX,UAAWnG,EAAOY,eAA1B,UACGqG,EACD,qBACEb,IAAKwB,EACLtB,IAAI,gBACJH,UAAY,gCACVW,EAAW,aAAe,iBAK/BA,GACC,oBAAIlC,IAAKA,EAAKuB,UAAWnG,EAAOa,aAAhC,SACGuG,OAAOS,QAAQjB,GAAYkB,KAAI,CAAC,EAAoBC,KAArB,IAAEC,EAAOC,GAAT,SAC9B,oBAEE9B,UAAY,GAAEnG,EAAOc,oBACnBmG,IAAmBgB,EAAY,eAAiB,oBAElDN,QAAS,KACiB,oBAAbhB,GAAyBA,EAASqB,GAC7Cd,EAAkBe,GAClBlB,GAAY,EAAZ,EARJ,SAWGkB,GAVIF,EAFuB,WAzB1C,EC+CaG,MA3DG,IAA0F,IAAD,MAAxF,UAAEC,EAAF,QAAaC,EAAb,SAAsBC,EAAtB,aAAgCC,EAAhC,cAA8C5B,EAA9C,SAA6DC,EAA7D,WAAuEC,GAAiB,EACzG,MAAOE,EAAUC,GAAeC,oBAAS,IAClCC,EAAgBC,GAAqBF,mBAAS,UAC/CpC,EAAMuC,mBAENoB,EAAS,URgEY,EAAC9E,EAAa4E,EAAUF,EAAWC,KAAa,IAAD,EAC1E,MAAMI,EAAkBH,EAASI,GAAGC,qBAAW,MACzCC,KAAoBlF,GAAe+E,GAAmBL,GAAaC,IAEnE,MAAEQ,EAAF,MAASpC,GAAT,UACJqC,YACEF,GAAkB,CAChBG,SAAU,IAAIrG,IAASjB,EAAgBkB,EAAKR,UAC5C6G,OAAQ,gBACRC,KAAM,CAACX,EAAU,CAACF,EAAWC,aAL7B,QAOC,CAAC,EACR,OAAOQ,EAAQF,qBAAW,KAAd,OAAqBlC,QAArB,IAAqBA,OAArB,EAAqBA,EAAOyC,QAAQ,EAAhD,EQ5EkBC,CAAcZ,EAAcD,EAAUF,EAAWC,UAApD,QAAgE,EAY/E,OAVAzD,EAAkBC,GAAK,IAAMmC,GAAY,KAEzCjC,qBAAU,KACJsC,OAAOC,KAAKT,GAAYU,SAASZ,GACnCQ,EAAkBN,EAAWF,IAE7BQ,EAAkB,SACnB,GACA,CAACR,EAAeE,IAGjB,sBAAKT,UAAWnG,EAAOU,gBAAvB,UACE,uBACE6G,YAAY,MACZC,KAAK,SACLhB,MAAO2C,sBAAYZ,GACnBpC,UAAWnG,EAAOW,YAClB8G,UAAQ,IAGV,sBAAKtB,UAAU,WAAWwB,QAAS,IAAMZ,GAAaD,GAAtD,UACE,yBAAQX,UAAWnG,EAAOY,eAA1B,UACGqG,EACD,qBACEb,IAAKwB,EACLtB,IAAI,gBACJH,UAAY,gCAA8BW,EAAW,aAAe,iBAIvEA,GACC,oBAAIlC,IAAKA,EAAKuB,UAAWnG,EAAOa,aAAhC,SACGuG,OAAOS,QAAQjB,GAAYkB,KAAI,CAAC,EAAoBC,KAArB,IAAEC,EAAOC,GAAT,SAC9B,oBAEE9B,UAAWnG,EAAOc,iBAClB6G,QAAS,KACiB,oBAAbhB,GAAyBA,EAASqB,GAC7Cd,EAAkBe,GAClBlB,GAAY,EAAZ,EANJ,SASGkB,GARIF,EAFuB,WAtB1C,ECFaqB,MAjBC,IAAuB,IAAtB,aAAEC,GAAmB,EACpC,OACE,qBAAKlD,UAAWnG,EAAOqB,QAAvB,SACE,mBAAG8E,UAAWnG,EAAOsB,YAArB,SACG+H,EACC,qCACE,sBAAMlD,UAAWnG,EAAOuB,YAAxB,uBACC4H,sBAAW,OAACE,QAAD,IAACA,IAAgBX,qBAAW,SAG1C,MATR,ECgKaY,MAxJE,IAAgB,IAAD,QAAd,MAAEC,GAAY,EAC9B,MAAM,QAAEC,GAAYC,eACbC,EAAWC,GAAgB3C,mBAAS,MACpCmB,EAAWyB,GAAgB5C,mBAASuC,EAAM,GAAG7F,gBAC7C0E,EAASyB,GAAc7C,mBAAS,KAChC8C,EAAYC,GAAiB/C,oBAAS,GAEvCgD,EAAqBtB,qBAAWgB,GAAa,KAC7CO,EVb2BV,IACjCA,EAAMW,QAAO,CAACC,EAAMC,KAClBD,EAAKC,EAAK1G,eAAiB0G,EAAKpG,WAChCmG,EAAKC,EAAKxG,eAAiBwG,EAAKlG,WACzBiG,IACN,CAAC,GUQoBE,CAAmBd,GACrCe,EVP4B,EAACf,EAAOpB,IAAcoB,EACvDgB,QAAQC,GAAQA,EAAI9G,gBAAkByE,GAAaqC,EAAI5G,gBACvDsG,QAAO,CAACC,EAAMC,KACTA,EAAK1G,gBAAkByE,EACzBgC,EAAKC,EAAKxG,eAAiBwG,EAAKlG,WACvBkG,EAAKxG,gBAAkBuE,IAChCgC,EAAKC,EAAK1G,eAAiB0G,EAAKpG,YAE3BmG,IACN,CAAC,GUFsBM,CAAqBlB,EAAOpB,GAChD1E,EAAW,oBVIa,EAAC8F,EAAOpB,EAAWC,KACjD,GAAKsC,MAAMC,QAAQpB,IAAWpB,GAAcC,EAE5C,OAAOmB,EAAMqB,MAAMJ,GAChBA,EAAI9G,gBAAkByE,GAAaqC,EAAI5G,gBAAkBwE,GACzDoC,EAAI5G,gBAAkBuE,GAAaqC,EAAI9G,gBAAkB0E,GAF5D,EUPoByC,CAAiBtB,EAAOpB,EAAWC,UAAtC,aAAG,EAA6ChE,eAAhD,QAA2D,GAEtE0G,EAAiB,IAAIrI,IAASjB,EAAgBkB,EAAKR,UACnD6I,EAAoB,IAAItI,IAAS0F,EAAW6C,EAAMzH,KAClD0H,EAAmBC,YAAgB/C,EAAWqB,GAC9C2B,EAAiBD,YAAgB9C,EAASoB,GAC1C4B,EAAiBC,YAAkBlD,EAAWqB,EAAShI,IAAmBkH,qBAAW,KACrF4C,EAAiBtB,EAAmBvB,GAAG2C,GACvCG,EAA0BvB,EAAmBvB,GAAGC,qBAAW,MAC3D8C,EAAmBxB,EAAmByB,IAAnB,OAAuBR,QAAvB,IAAuBA,IAAoBvC,qBAAW,OAGvEgD,MAAOC,EAAkBC,KAAMC,GACrCC,YAAoBf,EAAmB,UAAW,CAChDgB,gBAAiB,qBACjBC,yBAA0B,MAGtBN,MAAOO,EAAkBL,KAAMM,GACrCJ,YAAoBhB,EAAgB,2BAA4B,CAC9DiB,gBAAiB,2BACjBC,yBAA0B,KAGxBG,EAAc7H,EAAmBqH,GACjC9E,EAAavC,EAAmB2H,GAChCG,GAAcD,GAAeb,EAC7Be,GAAWf,IAAmBzE,GAAc0E,GAA2BC,EAEvEc,EVOyB,EAACX,EAAkBM,KAClD,IAAI3H,EAAmB2H,KAAoB3H,EAAmBqH,GAI9D,OAAIjH,EAAqBuH,GAChB,6BAGLvH,EAAqBiH,GAChB,2BADT,CAIA,EUpBuBY,CAAkBZ,EAAkBM,GACrDO,EVVyB,EAACb,EAAkBM,KAClD,IAAI3H,EAAmBqH,KAAqBrH,EAAmB2H,GAI/D,OAAIxH,EAAkBkH,GACb,qBAAuBA,EAAiBc,aAG7ChI,EAAkBwH,GACb,iBAAmBA,EAAiBQ,kBAD7C,CAIA,EUHuBC,CAAkBf,EAAkBM,GA8C3D,OAVAnH,qBAAU,MACL0H,GAAkBF,IACnBK,YAAW,KACT5C,GAAc,GACdJ,EAAa,KACbE,EAAW,GAAX,GACC,IACJ,GACA,CAAC2C,EAAgBF,IAGlB,sBAAKnG,UAAU,oCAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CACEK,MAAOkD,EACPjD,SAhCmBD,IACzB,MAAMoG,EAAepG,EAAMqG,OAE3B,IACED,GAAgBlE,qBAAWlC,GAC3BmD,EAAanD,EACD,CAAZ,MAAOkB,GAAK,GA2BRhB,cAAeyB,EACfxB,SAzBmBH,IACzBoD,EAAapD,EAAb,EAyBMI,WAAYqD,EACZpD,WAAYA,GAAc2E,IAE5B,cAAC,EAAD,CAASnC,aAAc4B,OAGzB,sBAAK9E,UAAU,gBAAf,UACE,cAAC,EAAD,CACEgC,UAAWA,EACXC,QAASA,EACTC,SAAU2B,EACV1B,aAAc7E,EACdiD,cAAe0B,EACfzB,SAnCiBH,IACvBqD,EAAWrD,EAAX,EAmCMI,WAAY0D,IAEd,cAAC,EAAD,CAASjB,aAAc8B,OAGxBG,IAAmBzE,EAClB,wBACEY,UAAW2E,EACXzE,QA1EmB,KACzBkE,EAAgBrK,EAAgBsL,IAAOC,UAAUC,WAAjD,EA0EM7G,UAAY,GACViG,EACI,0BACA,iCACFpM,EAAOe,eAPb,SASGoL,EAAc,eAAiB,YAGlC,wBACE1E,UAAW4E,EACX1E,QAjFgB,KACtBuE,EACElC,EACA,EACA,CAAC7B,EAAWC,GACZoB,EACAyD,KAAKC,MAAMC,KAAKC,MAAQ,KAAQ,MAChCC,MAAMC,IACN3D,EAAa,IAAb,GAPF,EAiFMxD,UAAY,GACVkG,EAAU,0BAA4B,iCACpCrM,EAAOe,eALb,SAOG8F,EACG,cACA2E,EACA,OACA,yBAIPgB,IAAmB1C,EAClB,mBAAG3D,UAAWnG,EAAOgB,QAArB,SAA+BwL,IAC7BF,EACF,mBAAGnG,UAAWnG,EAAOgB,QAArB,SAA+BsL,IAE/B,KA5DN,E,kBC9DaiB,MAjCM,KACnB,MAAOC,EAAUC,GAAezG,mBAAS,KAEnC,IAAE0G,GAAQC,eACV,QAAEnE,EAAF,sBAAWoE,EAAX,WAAkCC,GAAepE,cAYvD,OAVA3E,qBAAU,KAEN2I,EADEC,IAEOlE,EACGsE,YAAetE,GAEf,IACb,GACA,CAACA,EAASkE,EAAKD,IAGhB,yBACE9F,QAAS,KACF6B,EAGHqE,IAFAD,GAGD,EAEHzH,UAAWnG,EAAOiB,aARpB,UAUgB,KAAbuM,GAAmB,iBACN,KAAbA,GAAmBA,IAZxB,EC8BaO,MA3CH,KACV,MAAM,QAAEvE,GAAYC,eACbuE,EAAczE,GXKC,MACtB,MAAM,gBAAE7H,EAAF,aAAmBG,GAAiBoM,eACnCC,EAASC,GAAcnH,oBAAS,IAChCuC,EAAO6E,GAAYpH,mBAAS,CAAC,GAUpC,OARAlC,qBAAU,KACRS,EAAU1D,EAAaH,IAClB2L,MAAM9D,IACL6E,EAAS7E,GACT4E,GAAW,EAAX,GAHN,GAKC,CAACtM,EAAcH,IAEX,CAACwM,EAAS3E,EAAjB,EWlB8B8E,GAE9B,OACE,qBAAKlI,UAAWnG,EAAOC,UAAvB,SACE,sBAAKkG,UAAWnG,EAAOE,eAAvB,UACE,yBAAQiG,UAAWnG,EAAOG,OAA1B,UACE,qBACEiG,IAAKkI,EACLhI,IAAI,eACJH,UAAU,6BAEZ,cAAC,EAAD,OAGF,sBAAKA,UAAWnG,EAAOI,kBAAvB,UACE,oBAAI+F,UAAWnG,EAAOK,UAAtB,wBACA,mBAAG8F,UAAWnG,EAAOM,SAArB,wCAEA,qBAAK6F,UAAWnG,EAAOO,mBAAvB,SACE,sBAAK4F,UAAWnG,EAAOQ,YAAvB,UACE,qBAAK2F,UAAU,kBACf,qBAAKA,UAAWnG,EAAOS,SAAvB,SACG+I,EACCwE,EACE,cAAC,EAAD,CAAQ9H,MAAM,gCAEd,cAAC,EAAD,CAAUqD,MAAOA,IAGnB,cAAC,EAAD,CAAQrD,MAAM,iCAGlB,qBAAKC,UAAU,8BA9B3B,E,OCJFoI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAcC,OAAQlN,EAAtB,SACE,cAAC,EAAD,QAGJ2D,SAASwJ,eAAe,Q","file":"static/js/main.173c72c3.chunk.js","sourcesContent":["const styles = {\n  // App.js\n  container: \"flex justify-center min-h-screen sm:px-16 px-6 bg-site-black\",\n  innerContainer:\n    \"flex justify-between items-center flex-col max-w-[1280px] w-full\",\n  header: \"flex flex-row justify-between items-center w-full sm:py-10 py-6\",\n  exchangeContainer:\n    \"flex-1 flex justify-start items-center flex-col w-full mt-10\",\n  headTitle: \"text-white font-poppins font-black text-5xl tracking-wide\",\n  subTitle: \"text-dim-white font-poppins font-medium mt-3 text-base\",\n  exchangeBoxWrapper: \"mt-10 w-full flex justify-center\",\n  exchangeBox:\n    \"relative md:max-w-[700px] md:min-w-[500px] min-w-full max-w-full gradient-border p-[2px] rounded-3xl\",\n  exchange:\n    \"w-full min-h-[400px] bg-site-black backdrop-blur-[4px] rounded-3xl shadow-card flex p-10\",\n\n  // AmountIn & AmountOut\n  amountContainer:\n    \"flex justify-between items-center flex-row w-full min-w-full bg-site-dim border-[1px] border-transparent hover:border-site-dim2 min-h-[96px] sm:p-8 p-4 rounded-[20px]\",\n  amountInput:\n    \"w-full flex-1 bg-transparent outline-none font-poppins font-black text-2xl text-white\",\n  currencyButton:\n    \"flex flex-row items-center bg-site-dim2 py-2 px-4 rounded-xl font-poppins font-bold text-white\",\n  currencyList:\n    \"absolute z-10 right-0 bg-site-black border-[1px] border-site-dim2 w-full mt-2 rounded-lg min-w-[170px] overflow-hidden\",\n  currencyListItem:\n    \"font-poppins font-medium text-base text-white hover:text-dim-white px-5 py-3 hover:bg-site-dim2 cursor-pointer\",\n\n  // Exchange\n  actionButton:\n    \"border-none outline-none px-6 py-2 font-poppins font-bold text-lg rounded-2xl leading-[24px] transition-all min-h-[56px]\",\n  message: \"font-poppins font-lg text-white font-bold mt-7\",\n\n  // WalletButton\n  walletButton:\n    \"bg-site-pink border-none outline-none px-6 py-2 font-poppins font-bold text-lg text-white rounded-3xl leading-[24px] hover:bg-pink-600 transition-all\",\n\n  // loader\n  loader: \"flex justify-center items-center flex-col w-full min-h-full\",\n  loaderImg: \"w-56 h-56 object-contain\",\n  loaderText:\n    \"font-poppins font-normal text-dim-white text-lg text-center mt-10\",\n\n  // balance\n  balance: \"w-full text-left mt-2 ml-2\",\n  balanceText: \"font-poppins font-normal text-dim-white\",\n  balanceBold: \"font-semibold text-white\",\n};\n\nexport default styles;\n","import { Goerli } from \"@usedapp/core\";\n\nexport const ROUTER_ADDRESS = \"0x6E71cfbc04eF15db5CcB942f2e4C78efCDD02833\";\n\nexport const DAPP_CONFIG = {\n  readOnlyChainId: Goerli.chainId,\n  readOnlyUrls: {\n    [Goerli.chainId]: \"https://eth-goerli.g.alchemy.com/v2/VFVeT3J9yUX9SZs4FStpZUZSJyIUolda\",\n  },\n};\n","import erc20 from \"./abis/erc20.json\";\nimport factory from \"./abis/factory.json\";\nimport pair from \"./abis/pair.json\";\nimport router01 from \"./abis/router01.json\";\nimport router02 from \"./abis/router02.json\";\n\nexport default {\n  erc20,\n  factory,\n  pair,\n  router01,\n  router02,\n};\n","/**\n * See all ids below\n * https://ethereum.stackexchange.com/questions/17051/how-to-select-a-network-id-or-is-there-a-list-of-network-ids\n */\nexport const GOERLI_ID = 5;\nexport const KOVAN_ID = 42;\nexport const MAINNET_ID = 1;\nexport const RINKEBY_ID = 4;\nexport const ROPSTEN_ID = 3;\nexport const VITRA_ID = 350;\n\nconst commonContracts = {\n  factory: \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\", // Substitua pelos contratos da VITRA, se for diferente\n  router01: \"0xf164fC0Ec4E93095b804a4795bBe1e041497b92a\", // Substitua se necessário\n  router02: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\", // Substitua se necessário\n};\n\nconst addresses = {\n  [VITRA_ID]: {\n    pairs: {\n      \"VITRA-WETH\": \"0x...\", // Adicione o endereço correto do par VITRA-WETH\n      \"VITRA-USDC\": \"0x...\", // Adicione o endereço correto do par VITRA-USDC\n    },\n    tokens: {\n      VITRA: \"0x...\", // Adicione o endereço do token VITRA\n      WETH: \"0x...\",  // Adicione o endereço do token WETH na rede VITRA, caso exista\n      USDC: \"0x...\",  // Adicione o endereço do token USDC na rede VITRA, caso exista\n    },\n    ...commonContracts,\n  },\n  [GOERLI_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0x8F609d85ebC64316B0B2f9E53c11b4e48B7A06d2\",\n    },\n    tokens: {\n      DAI: \"0x697Ed3E98aaeCFa3121F536251F9D500de159dBa\",\n      WETH: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n    },\n    ...commonContracts,\n  },\n  [KOVAN_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0xB10cf58E08b94480fCb81d341A63295eBb2062C2\",\n    },\n    tokens: {\n      DAI: \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\",\n      WETH: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\",\n    },\n    ...commonContracts,\n  },\n  [MAINNET_ID]: {\n    pairs: {\n      \"BAT-WETH\": \"0xB6909B960DbbE7392D405429eB2b3649752b4838\",\n      \"DAI-WETH\": \"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11\",\n      // Adicione mais pares conforme necessário\n    },\n    tokens: {\n      DAI: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n      WETH: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n    },\n    ...commonContracts,\n  },\n  [RINKEBY_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0x8B22F85d0c844Cf793690F6D9DFE9F11Ddb35449\",\n    },\n    tokens: {\n      DAI: \"0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735\",\n      WETH: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n    },\n    ...commonContracts,\n  },\n  [ROPSTEN_ID]: {\n    pairs: {\n      \"DAI-WETH\": \"0x1c5DEe94a34D795f9EEeF830B68B80e44868d316\",\n    },\n    tokens: {\n      DAI: \"0xaD6D458402F60fD3Bd25163575031ACDce07538D\",\n      WETH: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n    },\n    ...commonContracts,\n  },\n};\n\nexport default addresses;\n","import { abis } from \"@my-app/contracts\";\nimport { getPairsInfo } from \"./getPairsInfo\";\n\nexport const getFactoryInfo = async (factoryAddress, web3) => {\n  const factory = new web3.eth.Contract(abis.factory, factoryAddress);\n\n  const factoryInfo = {\n    feeTo: await factory.methods.feeTo().call(),\n    feeToSetter: await factory.methods.feeToSetter().call(),\n    allPairsLength: await factory.methods.allPairsLength().call(),\n    allPairs: [],\n  };\n\n  for (let i = 0; i < factoryInfo.allPairsLength; i++) {\n    factoryInfo.allPairs[i] = await factory.methods.allPairs(i).call();\n  }\n\n  factoryInfo.pairsInfo = await getPairsInfo(factoryInfo.allPairs, web3);\n\n  return factoryInfo;\n}\n","import { abis } from \"@my-app/contracts\";\n\nexport async function getPairsInfo(pairAddresses, web3) {\n  const pairsInfo = [];\n  const pairABI = abis.pair;\n  const tokenABI = abis.erc20.abi;\n\n  for (let i = 0; i < pairAddresses.length; ++i) {\n    const pairAddress = pairAddresses[i];\n    const pair = new web3.eth.Contract(pairABI, pairAddresses[i]);\n\n    const token0Address = await pair.methods.token0().call();\n    const token1Address = await pair.methods.token1().call();\n    const token0Contract = new web3.eth.Contract(tokenABI, token0Address);\n    const token1Contract = new web3.eth.Contract(tokenABI, token1Address);\n    const token0Name = await token0Contract.methods.name().call();\n    const token1Name = await token1Contract.methods.name().call();\n\n    pairsInfo.push({\n      address: pairAddress,\n      token0Address,\n      token1Address,\n      token0Name,\n      token1Name\n    });\n  }\n\n  return pairsInfo;\n}\n","\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abis } from \"@my-app/contracts\";\nimport { useCall } from \"@usedapp/core\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { useEffect } from \"react\";\n\nimport { ROUTER_ADDRESS } from \"../config\";\n\nexport const getAvailableTokens = (pools) =>\n  pools.reduce((prev, curr) => {\n    prev[curr.token0Address] = curr.token0Name;\n    prev[curr.token1Address] = curr.token1Name;\n    return prev;\n  }, {});\n\nexport const getCounterpartTokens = (pools, fromToken) => pools\n  .filter((cur) => cur.token0Address === fromToken || cur.token1Address)\n  .reduce((prev, curr) => {\n    if (curr.token0Address === fromToken) {\n      prev[curr.token1Address] = curr.token1Name;\n    } else if (curr.token1Address === fromToken) {\n      prev[curr.token0Address] = curr.token0Name;\n    }\n    return prev;\n  }, {});\n\n\nexport const findPoolByTokens = (pools, fromToken, toToken) => {\n  if (!Array.isArray(pools) || !fromToken || !toToken) return undefined;\n\n  return pools.find((cur) =>\n    (cur.token0Address === fromToken && cur.token1Address === toToken) ||\n    (cur.token1Address === fromToken && cur.token0Address === toToken)\n  );\n};\n\nexport const isOperationPending = (operationState) => \n  operationState.status === \"PendingSignature\" || operationState.status === \"Mining\";\nexport const isOperationFailed = (operationState) =>\noperationState.status === \"Fail\" || operationState.status === \"Exception\";\nexport const isOperationSucceeded = (operationState) =>\noperationState.status === \"Success\";\n\nexport const getFailureMessage = (swapApproveState, swapExecuteState) => {\n  if (isOperationPending(swapApproveState) || isOperationPending(swapExecuteState)) {\n    return undefined;\n  }\n\n  if (isOperationFailed(swapApproveState)) {\n    return \"Approval failed - \" + swapApproveState.errorMessage;\n  }\n\n  if (isOperationFailed(swapExecuteState)) {\n    return \"Swap failed - \" + swapExecuteState.errorMessage;\n  }\n\n  return undefined;\n};\n\nexport const getSuccessMessage = (swapApproveState, swapExecuteState) => {\n  if (isOperationPending(swapExecuteState) ||isOperationPending(swapApproveState)) {\n    return undefined;\n  }\n\n  if (isOperationSucceeded(swapExecuteState)) {\n    return \"Swap executed successfully\";\n  }\n\n  if (isOperationSucceeded(swapApproveState)) {\n    return \"Approval successful\";\n  }\n\n  return undefined;\n};\n\nexport const useAmountsOut = (pairAddress, amountIn, fromToken, toToken) => {\n  const isValidAmountIn = amountIn.gt(parseUnits(\"0\"));\n  const areParamsValid = !!(pairAddress && isValidAmountIn && fromToken && toToken);\n\n  const { error, value } =\n    useCall(\n      areParamsValid && {\n        contract: new Contract(ROUTER_ADDRESS, abis.router02),\n        method: \"getAmountsOut\",\n        args: [amountIn, [fromToken, toToken]],\n      }\n    ) ?? {};\n  return error ? parseUnits(\"0\") : value?.amounts[1];\n}\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}","import Web3 from \"web3\";\nimport { useEffect, useState } from \"react\";\nimport { useConfig } from \"@usedapp/core\";\n\nimport { ROUTER_ADDRESS } from \"../config\";\nimport { getFactoryInfo, getRouterInfo } from \"../utils\";\n\nexport const loadPools = async (providerUrl) => {\n  const provider = new Web3.providers.HttpProvider(providerUrl);\n  const web3 = new Web3(provider);\n  const routerInfo = await getRouterInfo(ROUTER_ADDRESS, web3);\n  const factoryInfo = await getFactoryInfo(routerInfo.factory, web3);\n  return factoryInfo.pairsInfo;\n}\n\nexport const usePools = () => {\n  const { readOnlyChainId, readOnlyUrls } = useConfig();\n  const [loading, setLoading] = useState(true);\n  const [pools, setPools] = useState({});\n\n  useEffect(() => {\n    loadPools(readOnlyUrls[readOnlyChainId])\n        .then((pools) => {\n          setPools(pools);\n          setLoading(false);\n        });\n  }, [readOnlyUrls, readOnlyChainId]);\n\n  return [loading, pools];\n}\n","import { abis } from \"@my-app/contracts\";\n\nexport const getRouterInfo = async (routerAddress, web3) => {\n  const router = new web3.eth.Contract(abis.router02, routerAddress);\n  \n  return {\n    factory: await router.methods.factory().call(),\n  };\n}\n","export default __webpack_public_path__ + \"static/media/chevron-down.371c0b7e.svg\";","export default __webpack_public_path__ + \"static/media/2.ac6e7a1b.png\";","export default __webpack_public_path__ + \"static/media/1.517bb1af.png\";","import React from \"react\";\n\nimport styles from \"../styles\";\nimport { ethereumLogo } from \"../assets\";\n\nconst Loader = ({ title }) => {\n  return (\n    <div className={styles.loader}>\n      <img\n        src={ethereumLogo}\n        alt=\"ethereum logo\"\n        className={styles.loaderImg}\n      />\n      <p className={styles.loaderText}>{title}</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { chevronDown } from \"../assets\";\nimport { useOnClickOutside } from \"../utils\";\nimport styles from \"../styles\";\n\nconst AmountIn = ({ value, onChange, currencyValue, onSelect, currencies, isSwapping }) => {\n  const [showList, setShowList] = useState(false);\n  const [activeCurrency, setActiveCurrency] = useState(\"Select\");\n  const ref = useRef()\n\n  useOnClickOutside(ref, () => setShowList(false))\n\n  useEffect(() => {\n    if (Object.keys(currencies).includes(currencyValue))\n      setActiveCurrency(currencies[currencyValue]);\n    else setActiveCurrency(\"Select\");\n  }, [currencies, currencyValue]);\n\n  return (\n    <div className={styles.amountContainer}>\n      <input\n        placeholder=\"0.0\"\n        type=\"number\"\n        value={value}\n        disabled={isSwapping}\n        onChange={(e) => typeof onChange === \"function\" && onChange(e.target.value)}\n        className={styles.amountInput}\n      />\n\n      <div className=\"relative\" onClick={() => setShowList(!showList)}>\n        <button className={styles.currencyButton}>\n          {activeCurrency}\n          <img\n            src={chevronDown}\n            alt=\"cheveron-down\"\n            className={`w-4 h-4 object-contain ml-2 ${\n              showList ? \"rotate-180\" : \"rotate-0\"\n            }`}\n          />\n        </button>\n\n        {showList && (\n          <ul ref={ref} className={styles.currencyList}>\n            {Object.entries(currencies).map(([token, tokenName], index) => (\n              <li\n                key={index}\n                className={`${styles.currencyListItem} ${\n                  activeCurrency === tokenName ? \"bg-site-dim2\" : \"\"\n                } cursor-pointer`}\n                onClick={() => {\n                  if (typeof onSelect === \"function\") onSelect(token);\n                  setActiveCurrency(tokenName);\n                  setShowList(false);\n                }}\n              >\n                {tokenName}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AmountIn;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { formatUnits } from \"ethers/lib/utils\";\n\nimport { chevronDown } from \"../assets\";\nimport { useAmountsOut, useOnClickOutside } from \"../utils\";\nimport styles from \"../styles\";\n\nconst AmountOut = ({ fromToken, toToken, amountIn, pairContract, currencyValue, onSelect, currencies }) => {\n  const [showList, setShowList] = useState(false);\n  const [activeCurrency, setActiveCurrency] = useState(\"Select\");\n  const ref = useRef()\n\n  const amountOut = useAmountsOut(pairContract, amountIn, fromToken, toToken) ?? 0;\n\n  useOnClickOutside(ref, () => setShowList(false))\n\n  useEffect(() => {\n    if (Object.keys(currencies).includes(currencyValue)) {\n      setActiveCurrency(currencies[currencyValue]);\n    } else {\n      setActiveCurrency(\"Select\")\n    }\n  }, [currencyValue, currencies]);\n\n  return (\n    <div className={styles.amountContainer}>\n      <input\n        placeholder=\"0.0\"\n        type=\"number\"\n        value={formatUnits(amountOut)}\n        className={styles.amountInput}\n        disabled\n      />\n\n      <div className=\"relative\" onClick={() => setShowList(!showList)}>\n        <button className={styles.currencyButton}>\n          {activeCurrency}\n          <img\n            src={chevronDown}\n            alt=\"cheveron-down\"\n            className={`w-4 h-4 object-contain ml-2 ${showList ? \"rotate-180\" : \"rotate-0\"}`}\n          />\n        </button>\n\n        {showList && (\n          <ul ref={ref} className={styles.currencyList}>\n            {Object.entries(currencies).map(([token, tokenName], index) => (\n              <li\n                key={index}\n                className={styles.currencyListItem}\n                onClick={() => {\n                  if (typeof onSelect === \"function\") onSelect(token);\n                  setActiveCurrency(tokenName);\n                  setShowList(false);\n                }}\n              >\n                {tokenName}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AmountOut;\n","import React from \"react\";\nimport { formatUnits, parseUnits } from \"ethers/lib/utils\";\n\nimport styles from \"../styles\";\n\nconst Balance = ({ tokenBalance }) => {\n  return (\n    <div className={styles.balance}>\n      <p className={styles.balanceText}>\n        {tokenBalance ? (\n          <>\n            <span className={styles.balanceBold}>Balance: </span>\n            {formatUnits(tokenBalance ?? parseUnits(\"0\"))}\n          </>\n        ) : (\n          \"\"\n        )}\n      </p>\n    </div>\n  );\n};\n\nexport default Balance;\n","import React, { useEffect, useState } from \"react\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { abis } from \"@my-app/contracts\";\nimport { ERC20, useContractFunction, useEthers, useTokenAllowance, useTokenBalance } from \"@usedapp/core\";\nimport { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\n\nimport  { getAvailableTokens, getCounterpartTokens, findPoolByTokens, isOperationPending, getFailureMessage, getSuccessMessage } from '../utils';\nimport { ROUTER_ADDRESS } from \"../config\";\nimport AmountIn from \"./AmountIn\";\nimport AmountOut from \"./AmountOut\";\nimport Balance from \"./Balance\";\nimport styles from \"../styles\";\n\nconst Exchange = ({ pools }) => {\n  const { account } = useEthers();\n  const [fromValue, setFromValue] = useState(\"0\");\n  const [fromToken, setFromToken] = useState(pools[0].token0Address); // initialFromToken\n  const [toToken, setToToken] = useState(\"\");\n  const [resetState, setResetState] = useState(false)\n\n  const fromValueBigNumber = parseUnits(fromValue || \"0\"); // converse the string to bigNumber\n  const availableTokens = getAvailableTokens(pools);\n  const counterpartTokens = getCounterpartTokens(pools, fromToken);\n  const pairAddress = findPoolByTokens(pools, fromToken, toToken)?.address ?? \"\";\n\n  const routerContract = new Contract(ROUTER_ADDRESS, abis.router02);\n  const fromTokenContract = new Contract(fromToken, ERC20.abi);\n  const fromTokenBalance = useTokenBalance(fromToken, account);\n  const toTokenBalance = useTokenBalance(toToken, account);\n  const tokenAllowance = useTokenAllowance(fromToken, account, ROUTER_ADDRESS) || parseUnits(\"0\");\n  const approvedNeeded = fromValueBigNumber.gt(tokenAllowance);\n  const formValueIsGreaterThan0 = fromValueBigNumber.gt(parseUnits(\"0\"));\n  const hasEnoughBalance = fromValueBigNumber.lte(fromTokenBalance ?? parseUnits(\"0\"));\n\n  // approve initiating a contract call (similar to use state) -> gives the state and the sender...\n  const { state: swapApproveState, send: swapApproveSend } =\n    useContractFunction(fromTokenContract, \"approve\", {\n      transactionName: \"onApproveRequested\",\n      gasLimitBufferPercentage: 10,\n    });\n  // swap initiating a contract call (similar to use state) -> gives the state and the sender...\n  const { state: swapExecuteState, send: swapExecuteSend } =\n    useContractFunction(routerContract, \"swapExactTokensForTokens\", {\n      transactionName: \"swapExactTokensForTokens\",\n      gasLimitBufferPercentage: 10,\n    });\n\n  const isApproving = isOperationPending(swapApproveState);\n  const isSwapping = isOperationPending(swapExecuteState);\n  const canApprove = !isApproving && approvedNeeded;\n  const canSwap = !approvedNeeded && !isSwapping && formValueIsGreaterThan0 && hasEnoughBalance;\n\n  const successMessage = getSuccessMessage(swapApproveState, swapExecuteState);\n  const failureMessage = getFailureMessage(swapApproveState, swapExecuteState);\n\n  const onApproveRequested = () => {\n    swapApproveSend(ROUTER_ADDRESS, ethers.constants.MaxUint256);\n  };\n\n  // https://docs.uniswap.org/protocol/V2/reference/smart-contracts/router-02#swapexacttokensfortokens\n  const onSwapRequested = () => {\n    swapExecuteSend(\n      fromValueBigNumber,\n      0,\n      [fromToken, toToken],\n      account,\n      Math.floor(Date.now() / 1000) + 60 * 20\n    ).then((_) => {\n      setFromValue(\"0\");\n    });\n  };\n\n  const onFromValueChange = (value) => {\n    const trimmedValue = value.trim();\n\n    try {\n      trimmedValue && parseUnits(value);\n      setFromValue(value);\n    } catch (e) {}\n  };\n\n  const onFromTokenChange = (value) => {\n    setFromToken(value);\n  };\n\n  const onToTokenChange = (value) => {\n    setToToken(value);\n  };\n\n  useEffect(() => {\n    if(failureMessage || successMessage) {\n      setTimeout(() => {\n        setResetState(true)\n        setFromValue(\"0\")\n        setToToken(\"\")\n      }, 5000)\n    }\n  }, [failureMessage, successMessage])\n\n  return (\n    <div className=\"flex flex-col w-full items-center\">\n      <div className=\"mb-8\">\n        <AmountIn\n          value={fromValue}\n          onChange={onFromValueChange}\n          currencyValue={fromToken}\n          onSelect={onFromTokenChange}\n          currencies={availableTokens}\n          isSwapping={isSwapping && hasEnoughBalance}\n        />\n        <Balance tokenBalance={fromTokenBalance} />\n      </div>\n\n      <div className=\"mb-8 w-[100%]\">\n        <AmountOut\n          fromToken={fromToken}\n          toToken={toToken}\n          amountIn={fromValueBigNumber}\n          pairContract={pairAddress}\n          currencyValue={toToken}\n          onSelect={onToTokenChange}\n          currencies={counterpartTokens}\n        />\n        <Balance tokenBalance={toTokenBalance} />\n      </div>\n\n      {approvedNeeded && !isSwapping ? (\n        <button\n          disabled={!canApprove}\n          onClick={onApproveRequested}\n          className={`${\n            canApprove\n              ? \"bg-site-pink text-white\"\n              : \"bg-site-dim2 text-site-dim2\"\n          } ${styles.actionButton}`}\n        >\n          {isApproving ? \"Approving...\" : \"Approve\"}\n        </button>\n      ) : (\n        <button\n          disabled={!canSwap}\n          onClick={onSwapRequested}\n          className={`${\n            canSwap ? \"bg-site-pink text-white\" : \"bg-site-dim2 text-site-dim2\"\n          } ${styles.actionButton}`}\n        >\n          {isSwapping\n            ? \"Swapping...\"\n            : hasEnoughBalance\n            ? \"Swap\"\n            : \"Insufficient balance\"}\n        </button>\n      )}\n\n      {failureMessage && !resetState ? (\n        <p className={styles.message}>{failureMessage}</p>\n      ) : successMessage ? (\n        <p className={styles.message}>{successMessage}</p>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Exchange;\n","import React, { useEffect, useState } from \"react\";\nimport { shortenAddress, useEthers, useLookupAddress } from \"@usedapp/core\";\n\nimport styles from \"../styles\";\n\nconst WalletButton = () => {\n  const [rendered, setRendered] = useState(\"\");\n\n  const { ens } = useLookupAddress();\n  const { account, activateBrowserWallet, deactivate } = useEthers();\n\n  useEffect(() => {\n    if (ens) {\n      setRendered(ens);\n    } else if (account) {\n      setRendered(shortenAddress(account));\n    } else {\n      setRendered(\"\");\n    }\n  }, [account, ens, setRendered]);\n\n  return (\n    <button\n      onClick={() => {\n        if (!account) {\n          activateBrowserWallet();\n        } else {\n          deactivate();\n        }\n      }}\n      className={styles.walletButton}\n    >\n      {rendered === \"\" && \"Connect Wallet\"}\n      {rendered !== \"\" && rendered}\n    </button>\n  );\n};\n\nexport default WalletButton;\n","import React from \"react\";\nimport { useEthers } from \"@usedapp/core\";\n\nimport styles from \"./styles\";\nimport { usePools } from \"./hooks\";\nimport { uniswapLogo } from \"./assets\";\nimport { Exchange, Loader, WalletButton } from \"./components\";\n\nconst App = () => {\n  const { account } = useEthers();\n  const [poolsLoading, pools] = usePools();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.innerContainer}>\n        <header className={styles.header}>\n          <img\n            src={uniswapLogo}\n            alt=\"uniswap-logo\"\n            className=\"w-16 h-16 object-contain\"\n          />\n          <WalletButton />\n        </header>\n\n        <div className={styles.exchangeContainer}>\n          <h1 className={styles.headTitle}>Vitra Swap</h1>\n          <p className={styles.subTitle}>Exchange tokens in seconds</p>\n\n          <div className={styles.exchangeBoxWrapper}>\n            <div className={styles.exchangeBox}>\n              <div className=\"pink_gradient\" />\n              <div className={styles.exchange}>\n                {account ? (\n                  poolsLoading ? (\n                    <Loader title=\"Loading pools, please wait!\" />\n                  ) : (\n                    <Exchange pools={pools} />\n                  )\n                ) : (\n                  <Loader title=\"Please connect your wallet\" />\n                )}\n              </div>\n              <div className=\"blue_gradient\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { DAppProvider } from \"@usedapp/core\";\n\nimport App from \"./App\";\nimport { DAPP_CONFIG } from \"./config\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DAppProvider config={DAPP_CONFIG}>\n      <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}